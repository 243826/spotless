ext.artifactId = project.artifactIdGradle
ext.version = project.versionGradle
apply from: rootProject.file('gradle/java-setup.gradle')
apply from: rootProject.file('gradle/java-publish.gradle')
apply from: rootProject.file('gradle/spotless-freshmark.gradle')

apply plugin: 'java-library'
apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'java-gradle-plugin'

dependencies {
	if (!project.versionGradle.endsWith('-SNAPSHOT') && project.versionLib.endsWith('-SNAPSHOT')) {
		// gradle = release, lib = snapshot, therefore gradle should depend on the last stable lib
		api "com.diffplug.spotless:spotless-lib:${project.stableLib}"
		api "com.diffplug.spotless:spotless-lib-extra:${project.stableLib}"
	} else {
		api project(':lib')
		api project(':lib-extra')
	}
	implementation "com.diffplug.durian:durian-core:${VER_DURIAN}"
	implementation "com.diffplug.durian:durian-io:${VER_DURIAN}"
	implementation "com.diffplug.durian:durian-collect:${VER_DURIAN}"

	testImplementation project(':testlib')
	testImplementation "junit:junit:${VER_JUNIT}"
	testImplementation "org.assertj:assertj-core:${VER_ASSERTJ}"
	testImplementation "com.diffplug.durian:durian-testlib:${VER_DURIAN}"
}

tasks.eclipse.dependsOn(pluginUnderTestMetadata)

test { testLogging.showStandardStreams = true }

test {
	useJUnit {
		excludeCategories 'com.diffplug.spotless.category.NpmTest'
	}
}

task npmTest(type: Test) {
	useJUnit {
		includeCategories 'com.diffplug.spotless.category.NpmTest'
	}
}

//////////////////////////
// GRADLE PLUGIN PORTAL //
//////////////////////////
version = project.ext.version
if (version.endsWith('-SNAPSHOT')) {
	publishPlugins.enabled = false
} else {
	pluginBundle {
		// These settings are set for the whole plugin bundle
		website = "https://github.com/diffplug/spotless"
		vcsUrl = "https://github.com/diffplug/spotless"
		description = project.description

		plugins {
			spotlessPlugin {
				id = 'com.diffplug.gradle.spotless'
				displayName = 'Spotless formatting plugin'
				tags = [
					'format',
					'style',
					'license',
					'header'
				]
			}
		}

		mavenCoordinates {
			groupId = project.group
			artifactId = project.artifactIdGradle
			version = project.ext.version
		}
	}
}
